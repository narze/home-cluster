apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: streamie
  name: streamie
spec:
  selector:
    matchLabels:
      app: streamie
  replicas: 1
  template:
    metadata:
      labels:
        app: streamie
    spec:
      containers:
        - env:
            - name: SOCKET_IO_SERVER_URL
              value: http://streamie-socket.narze.live
            - name: REDIS_URL
              value: redis://streamie-redis.streamie.svc.cluster.local:56379

            # TODO: Loop from secret-values
            - name: TWITCH_OAUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  key: TWITCH_OAUTH_TOKEN
                  name: streamie
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: OAUTH_CLIENT_ID
                  name: streamie
            - name: DISCORD_TOKEN
              valueFrom:
                secretKeyRef:
                  key: DISCORD_TOKEN
                  name: streamie
            - name: DEV_GUILD_ID
              valueFrom:
                secretKeyRef:
                  key: DEV_GUILD_ID
                  name: streamie
            - name: DISCORD_ADMIN_USER_ID
              valueFrom:
                secretKeyRef:
                  key: DISCORD_ADMIN_USER_ID
                  name: streamie
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: DATABASE_URL
                  name: streamie
            - name: TWITCH_HELIX_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: TWITCH_HELIX_CLIENT_ID
                  name: streamie
            - name: TWITCH_HELIX_OAUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  key: TWITCH_HELIX_OAUTH_TOKEN
                  name: streamie
            - name: PORT
              value: "3000"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          name: streamie
          # ports:
          #   - containerPort: 3000
          command: ["node"]
          args: ["."]
          workingDir: "/app/bot/bot"
